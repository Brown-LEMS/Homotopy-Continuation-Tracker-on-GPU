using Base
using HomotopyContinuation
using LinearAlgebra

@var x1 x2 x3 x4 x5
@var p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 p16 p17 p18 p19 p20

f1 = -x1^2*x4^2*p16^2 + x1^2*x4^2 - x1^2*x5^2*p16^2 - x1^2*p16^2 + 2*x1*x2*x4*x5 + 2*x1*x3*x4 + 2*x1*x4^2*p1*p16^2 - 2*x1*x4^2*p1 - 2*x1*x4*x5*p2 - 2*x1*x4*p3 + 2*x1*x5^2*p1*p16^2 + 2*x1*p1*p16^2 - x2^2*x4^2*p16^2 - x2^2*x5^2*p16^2 + x2^2*x5^2 - x2^2*p16^2 + 2*x2*x3*x5 + 2*x2*x4^2*p2*p16^2 - 2*x2*x4*x5*p1 + 2*x2*x5^2*p2*p16^2 - 2*x2*x5^2*p2 - 2*x2*x5*p3 + 2*x2*p2*p16^2 - x3^2*x4^2*p16^2 - x3^2*x5^2*p16^2 - x3^2*p16^2 + x3^2 + 2*x3*x4^2*p3*p16^2 - 2*x3*x4*p1 + 2*x3*x5^2*p3*p16^2 - 2*x3*x5*p2 + 2*x3*p3*p16^2 - 2*x3*p3 - x4^2*p1^2*p16^2 + x4^2*p1^2 - x4^2*p2^2*p16^2 - x4^2*p3^2*p16^2 + 2*x4*x5*p1*p2 + 2*x4*p1*p3 - x5^2*p1^2*p16^2 - x5^2*p2^2*p16^2 + x5^2*p2^2 - x5^2*p3^2*p16^2 + 2*x5*p2*p3 - p1^2*p16^2 - p2^2*p16^2 - p3^2*p16^2 + p3^2;
f2 = -x1^2*x4^2*p17^2 + x1^2*x4^2 - x1^2*x5^2*p17^2 - x1^2*p17^2 + 2*x1*x2*x4*x5 + 2*x1*x3*x4 + 2*x1*x4^2*p4*p17^2 - 2*x1*x4^2*p4 - 2*x1*x4*x5*p5 - 2*x1*x4*p6 + 2*x1*x5^2*p4*p17^2 + 2*x1*p4*p17^2 - x2^2*x4^2*p17^2 - x2^2*x5^2*p17^2 + x2^2*x5^2 - x2^2*p17^2 + 2*x2*x3*x5 + 2*x2*x4^2*p5*p17^2 - 2*x2*x4*x5*p4 + 2*x2*x5^2*p5*p17^2 - 2*x2*x5^2*p5 - 2*x2*x5*p6 + 2*x2*p5*p17^2 - x3^2*x4^2*p17^2 - x3^2*x5^2*p17^2 - x3^2*p17^2 + x3^2 + 2*x3*x4^2*p6*p17^2 - 2*x3*x4*p4 + 2*x3*x5^2*p6*p17^2 - 2*x3*x5*p5 + 2*x3*p6*p17^2 - 2*x3*p6 - x4^2*p4^2*p17^2 + x4^2*p4^2 - x4^2*p5^2*p17^2 - x4^2*p6^2*p17^2 + 2*x4*x5*p4*p5 + 2*x4*p4*p6 - x5^2*p4^2*p17^2 - x5^2*p5^2*p17^2 + x5^2*p5^2 - x5^2*p6^2*p17^2 + 2*x5*p5*p6 - p4^2*p17^2 - p5^2*p17^2 - p6^2*p17^2 + p6^2;
f3 = -x1^2*x4^2*p18^2 + x1^2*x4^2 - x1^2*x5^2*p18^2 - x1^2*p18^2 + 2*x1*x2*x4*x5 + 2*x1*x3*x4 + 2*x1*x4^2*p7*p18^2 - 2*x1*x4^2*p7 - 2*x1*x4*x5*p8 - 2*x1*x4*p9 + 2*x1*x5^2*p7*p18^2 + 2*x1*p7*p18^2 - x2^2*x4^2*p18^2 - x2^2*x5^2*p18^2 + x2^2*x5^2 - x2^2*p18^2 + 2*x2*x3*x5 + 2*x2*x4^2*p8*p18^2 - 2*x2*x4*x5*p7 + 2*x2*x5^2*p8*p18^2 - 2*x2*x5^2*p8 - 2*x2*x5*p9 + 2*x2*p8*p18^2 - x3^2*x4^2*p18^2 - x3^2*x5^2*p18^2 - x3^2*p18^2 + x3^2 + 2*x3*x4^2*p9*p18^2 - 2*x3*x4*p7 + 2*x3*x5^2*p9*p18^2 - 2*x3*x5*p8 + 2*x3*p9*p18^2 - 2*x3*p9 - x4^2*p7^2*p18^2 + x4^2*p7^2 - x4^2*p8^2*p18^2 - x4^2*p9^2*p18^2 + 2*x4*x5*p7*p8 + 2*x4*p7*p9 - x5^2*p7^2*p18^2 - x5^2*p8^2*p18^2 + x5^2*p8^2 - x5^2*p9^2*p18^2 + 2*x5*p8*p9 - p7^2*p18^2 - p8^2*p18^2 - p9^2*p18^2 + p9^2;
f4 = -x1^2*x4^2*p19^2 + x1^2*x4^2 - x1^2*x5^2*p19^2 - x1^2*p19^2 + 2*x1*x2*x4*x5 + 2*x1*x3*x4 + 2*x1*x4^2*p10*p19^2 - 2*x1*x4^2*p10 - 2*x1*x4*x5*p11 - 2*x1*x4*p12 + 2*x1*x5^2*p10*p19^2 + 2*x1*p10*p19^2 - x2^2*x4^2*p19^2 - x2^2*x5^2*p19^2 + x2^2*x5^2 - x2^2*p19^2 + 2*x2*x3*x5 + 2*x2*x4^2*p11*p19^2 - 2*x2*x4*x5*p10 + 2*x2*x5^2*p11*p19^2 - 2*x2*x5^2*p11 - 2*x2*x5*p12 + 2*x2*p11*p19^2 - x3^2*x4^2*p19^2 - x3^2*x5^2*p19^2 - x3^2*p19^2 + x3^2 + 2*x3*x4^2*p12*p19^2 - 2*x3*x4*p10 + 2*x3*x5^2*p12*p19^2 - 2*x3*x5*p11 + 2*x3*p12*p19^2 - 2*x3*p12 - x4^2*p10^2*p19^2 + x4^2*p10^2 - x4^2*p11^2*p19^2 - x4^2*p12^2*p19^2 + 2*x4*x5*p10*p11 + 2*x4*p10*p12 - x5^2*p10^2*p19^2 - x5^2*p11^2*p19^2 + x5^2*p11^2 - x5^2*p12^2*p19^2 + 2*x5*p11*p12 - p10^2*p19^2 - p11^2*p19^2 - p12^2*p19^2 + p12^2;
f5 = -x1^2*x4^2*p20^2 + x1^2*x4^2 - x1^2*x5^2*p20^2 - x1^2*p20^2 + 2*x1*x2*x4*x5 + 2*x1*x3*x4 + 2*x1*x4^2*p13*p20^2 - 2*x1*x4^2*p13 - 2*x1*x4*x5*p14 - 2*x1*x4*p15 + 2*x1*x5^2*p13*p20^2 + 2*x1*p13*p20^2 - x2^2*x4^2*p20^2 - x2^2*x5^2*p20^2 + x2^2*x5^2 - x2^2*p20^2 + 2*x2*x3*x5 + 2*x2*x4^2*p14*p20^2 - 2*x2*x4*x5*p13 + 2*x2*x5^2*p14*p20^2 - 2*x2*x5^2*p14 - 2*x2*x5*p15 + 2*x2*p14*p20^2 - x3^2*x4^2*p20^2 - x3^2*x5^2*p20^2 - x3^2*p20^2 + x3^2 + 2*x3*x4^2*p15*p20^2 - 2*x3*x4*p13 + 2*x3*x5^2*p15*p20^2 - 2*x3*x5*p14 + 2*x3*p15*p20^2 - 2*x3*p15 - x4^2*p13^2*p20^2 + x4^2*p13^2 - x4^2*p14^2*p20^2 - x4^2*p15^2*p20^2 + 2*x4*x5*p13*p14 + 2*x4*p13*p15 - x5^2*p13^2*p20^2 - x5^2*p14^2*p20^2 + x5^2*p14^2 - x5^2*p15^2*p20^2 + 2*x5*p14*p15 - p13^2*p20^2 - p14^2*p20^2 - p15^2*p20^2 + p15^2;

F = System([f1, f2, f3, f4, f5]; variables=[x1, x2, x3, x4, x5], parameters = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20]);

S = monodromy_solve(F)
start_solutions = solutions(S);
start_params = S.parameters;

target_params = rand(20) + rand(20) * im;
@time solve(F, start_solutions; start_parameters=start_params, target_parameters=target_params)


#> write target solutions to a file
#io = open("/users/cchien3/data/cchien3/hcOutput", "w");
#using DelimitedFiles
#writedlm(io, solutions(R));
#close(io)

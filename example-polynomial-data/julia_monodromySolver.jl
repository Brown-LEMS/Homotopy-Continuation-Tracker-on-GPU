#############################################################################
#> Code Description
#    This code generates solutions from a set of polynomials using Julia's 
#    monodromy solver. It takes alea6 benchmark problem as an example.
#    At the end of the code, it is optional for the user to write the start 
#    solutions to a file in a user-defined directory.
#
#> (c) LEMS, Brown University
#> Chiang-Heng Chien (chiang-heng_chien@brown.edu)
#> First appeared: Jun. 8th, 2022
#> Polished:       Oct. 7th, 2022
#############################################################################

using Base
using HomotopyContinuation
using LinearAlgebra

#> alea6 has 6 unknowns and 29 coefficients
#> x: unknowns, a: coefficients
@var x[1:6];
@var a[1:29];

#> polynomial of the alea6 problem
f1 = a[1]*x[1]^2*x[4] + a[2]*x[2]*x[4]*x[5] + a[3]*x[2]*x[4]*x[6] + a[4]*x[4]*x[6] + a[5]*x[5]*x[6]
f2 = a[6]*x[1]*x[2]*x[6] + a[7]*x[2]^2*x[5] + a[8]*x[2]*x[3]*x[5] + a[9]*x[2]*x[5]^2 + a[10]*x[3]^2 + a[11]*x[4]*x[5]*x[6]
f3 = a[12]*x[1]^2*x[4] + a[13]*x[1]^2 + a[14]*x[1]*x[4]*x[6] + a[13]*x[2]^2*x[5] + a[3]*x[2]*x[4]^2 + a[15]*x[6]^3
f4 = a[16]*x[1]*x[4]^2 + a[14]*x[2]*x[4] + a[17]*x[2]*x[5]^2 + a[18]*x[3]*x[4] + a[19]*x[3]*x[5]*x[6] + a[20]*x[4]*x[5]^2
f5 = a[21]*x[1]^2*x[3] + a[22]*x[1]*x[2]*x[3] + a[23]*x[1]*x[4]*x[5] + a[24]*x[1]*x[4] + a[25]*x[2]^2*x[5]
f6 = a[26]*x[1]*x[3]*x[4] + a[19]*x[3]^2*x[4] + a[27]*x[3]^2*x[6] + a[28]*x[3] + a[29]*x[4]^3 + a[25]*x[5]

#> stack all polynomials
Eqs = [f1; f2; f3; f4; f5; f6]

#> make a System
F = System(Eqs; variables=x, parameters=a);

#> find the solutions of the system (start coefficients (parameters) are generated by Julia)
S = monodromy_solve(F)
start_solutions = solutions(S);
start_params = S.parameters;

#> write the resultant start solutions to a file and store under the user-defined directory
#hc_start_sols = solutions(result)
#io = open("/your/start-sols/dir/julia-start-sols-raw", "w");
#using DelimitedFiles
#writedlm(io, hc_start_sols);
#close(io)
